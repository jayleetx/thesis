[
["index.html", "My Final College Paper Introduction", " My Final College Paper Jay Lee May 2019 Introduction Welcome to the R Markdown thesis template. This template is based on (and in many places copied directly from) the Reed College LaTeX template, but hopefully it will provide a nicer interface for those that have never used TeX or LaTeX before. Using R Markdown will also allow you to easily keep track of your analyses in R chunks of code, with the resulting plots and output included as well. The hope is this R Markdown template gets you in the habit of doing reproducible research, which benefits you long-term as a researcher, but also will greatly help anyone that is trying to reproduce or build onto your results down the road. Hopefully, you won’t have much of a learning period to go through and you will reap the benefits of a nicely formatted thesis. The use of LaTeX in combination with Markdown is more consistent than the output of a word processor, much less prone to corruption or crashing, and the resulting file is smaller than a Word file. While you may have never had problems using Word in the past, your thesis is likely going to be about twice as large and complex as anything you’ve written before, taxing Word’s capabilities. After working with Markdown and R together for a few weeks, we are confident this will be your reporting style of choice going forward. Why use it? R Markdown creates a simple and straightforward way to interface with the beauty of LaTeX. Packages have been written in R to work directly with LaTeX to produce nicely formatting tables and paragraphs. In addition to creating a user friendly interface to LaTeX, R Markdown also allows you to read in your data, to analyze it and to visualize it using R functions, and also to provide the documentation and commentary on the results of your project. Further, it allows for R results to be passed inline to the commentary of your results. You’ll see more on this later. Who should use it? Anyone who needs to use data analysis, math, tables, a lot of figures, complex cross-references, or who just cares about the final appearance of their document should use R Markdown. Of particular use should be anyone in the sciences, but the user-friendly nature of Markdown and its ability to keep track of and easily include figures, automatically generate a table of contents, index, references, table of figures, etc. should make it of great benefit to nearly anyone writing a thesis project. "],
["1-litreview.html", "Chapter 1 What is ranked choice voting? 1.1 Frequently Used Terms 1.2 Claims about RCV 1.3 History of RCV in the US (SF in particular) 1.4 Why, or why not, implement RCV? 1.5 Research into SF?", " Chapter 1 What is ranked choice voting? Ranked choice voting (RCV), also known as the alternative vote (AV) or instant-runoff voting (IRV) is an alternative voting method to the first-past-the-post (FPTP) or “plurality” election system more familiar to American voters, where the candidate with the most votes wins. Each voter, instead of choosing their highest preference among a set of candidates for an office, ranks some subset of the candidates in order of preference. This system (or a close variant) is used in Australia, Maine, and some American municipalities: San Francisco, CA; Minneapolis, MN; and Cambridge, MA; among others. The single-winner RCV tabulation algorithm generally proceeds as follows: For each voter, identify their most preferred candidate that has not yet been eliminated. Count up these preferences by candidate. If one candidate has a majority (50% + 1) of the unexhausted votes, they are declared the winner and counting stops. The candidate with the lowest number of votes is eliminated. The ballots counted for that candidate are each transferred to the voter’s next choice if one exists, or if one does not exist the ballot is “exhausted” and removed from counting for further rounds. Return to 1. Most jurisdictions that use RCV have slightly different rules for edge cases and ballot errors, but this algorithm is what distinguishes RCV from other ranked voting systems (e.g. Borda, Condorcet, Contingent, etc.). A close variant of RCV is the single transferrable vote (STV) method1, which can be used to elect multiple candidates, i.e. for a school board, instead of just one. In the US, this is used in Cambridge, MA and Minneapolis, MN to elect multi-member offices. 1.1 Frequently Used Terms Below are some definitions for frequently used terms later on. These are not all ubiquitous (for example, “undervote” has another meaning in most voting research), but we define them here for clarity later on. Overvote: when a voter ranks multiple candidates in the same slot. This slot is typically thrown out entirely in counting, because it’s often not possible to determine which candidate was preferred. Undervote: when a voter does not rank candidates in all of the slots available to them. This is different than other definitions of “undervote”, which refer to a voter participating in one election on a ballot but not another one. This is not a problem in counting, and is explicitly allowed in the laws of most jurisdictions. A plurality election analog would be voting in high-profile races (e.g. presidential), but not down-ticket decisions (e.g. local water board). Skipped vote: when a voter ranks no candidate at slot \\(x\\), but ranks a candidate at slot \\(y &gt; x\\). This is typically not a problem in counting, but different jurisdictions have different rules about whether a voter’s ballot is exhausted at this point or continues on to their next ranked choice. Plurality voting has no analog to this, because each race only has one “ranking” (first!). Duplicated vote: when a voter ranks the same candidate for distinct slots \\(x\\) and \\(y\\). This is typically not a problem for counting, and the first ranking for the candidate is used. Similar to a skipped vote, plurality voting has no analog to this. Ballot exhaustion: as ballot counting progresses, some ballots will become “exhausted” when all the candidates selected are eliminated. Suppose the final count in an election is between candidates B and D, and a voter ranked candidates C-A-E. Their ballot would not be counted in this final round, as they expressed no preference for either candidate B or D. An analogous situation in a plurality election might be voting in the general election but not a runoff, that is only having a say in part of the election. Over-, skipped, and duplicated votes are really only interpretable as “ballot mistakes”: for example, even if a voter truly prefers two candidates equally, the ballot instructions (should) make it clear that ranking them at the same slot is not allowed. 1.2 Claims about RCV There are plenty of arguments both for and against implementing RCV in place of plurality in different jurisdictions (see the literature review), but here we’ll focus on evaluating one major argument against it - RCV is harder for voters to participate in than a plurality system. There are two major reasons cited for this: The physical design of an RCV ballot is usually more complicated than a plurality ballot, because there has to be a system to encode a more full preference among the candidates than just selecting one candidate The process of forming a multi-candidate preference inherently takes more mental energy than just choosing a favorite candidate The first facet of this argument should be reflected in ballot errors made by voters. Compared to plurality voting, we expect more errors in an RCV ballot just because the ballot is more complicated. There are also more potentials for error in the RCV system generally. The only “errors” in a plurality ballot are incompletely marking a candidate (think incorrect Scantron bubbling, or hanging chads) or overvoting, both of which are potential pitfalls for a ranked choice ballot as well. On top of these, there are the potential errors of duplicated and skipped votes unique to ranked ballots2. The second facet should be reflected in incomplete ballots filled out by voters. Given that they understand how to encode their preferences on the ballot, there is still the non-trivial task of forming such a preference. Structurally, some of the factors that should affect this incompleteness are: The number of candidates running for a position The number of candidates voters can rank The number of seats elected in a given race This first variable is at the election level (different for every election), the second is at the jurisdiction level, and the third is a mix of both. For a clear example of these differences, consider a 2016 San Francisco Board of Supervisors race (District 3) versus a 2017 Cambridge City Council race. Factor San Francisco 2016 Cambridge 2017 Candidates running 2 27 Candidates rankable 2 (Generally, up to 3) 27 (Generally, all) Seats elected 1 9 1.3 History of RCV in the US (SF in particular) In the United States, there have been two major periods of RCV implementation in various jurisdictions. Between 1915 and 1950, 24 American cities chose to institute RCV as a form of local election. By 1965, however, all of these except for Cambridge, MA had eliminated the policy change. Then, in the 2000s, there was a resurgence of uptake in a different set of American cities3, including Minneapolis and a handful in the San Francisco Bay Area. While Cambridge has consistently used the multi-winner (STV) method to elect City Council and School Board seats, the modern resurgence of RCV almost universally deals with single-winner elections. Research argues that RCV appears in jurisdictions where there is strong multi-party support for the reform - the RCV method itself gives individual parties less power in the election process, so powerful single parties usually don’t have reason to support it. 1.4 Why, or why not, implement RCV? There are plenty of arguments on both sides of implementing RCV in jurisdictions that consider it. 1.4.1 Pros Cost-saving (no secondary election) Ensures majority, not just a plurality - big in Maine, reaction to Paul LePage winning twice without majorities. Removes the spoiler problem - also important in Maine 1.4.1.1 Disincentivizes negative campaigning Ranked choice voting should incentivize candidates to avoid negative campaigning. In a plurality election, since candidates don’t care about voters who are committed to their competitors, a well-thought out negative campaign will only ostracize voters who were never going to support another candidate in the first place, and perhaps bring more swing voters to their side. Under RCV, however, alienating another candidate’s voters could backfire in the event that candidate is eliminated and these voters decide to support your opponent in the next round, causing your defeat . An interesting real-life case of this is in the 2018 San Francisco mayoral election . There were three frontrunners heading into election day, all incumbent members of the city’s Board of Supervisors: London Breed, Jane Kim, and Mark Leno. As polls showed Breed ahead about a month before the election, Kim and Leno held a joint press conference to endorse the other as voters’ second choices. By drawing second-choice votes from the other candidate, the remaining candidate hoped to overcome the gap between them and Breed. In the actual election, the standing when it came time to proceed to the final round of counting was 102,767 for Breed, 68,707 for Leno, and 66,043 for Kim. While a significant proportion of Kim’s voters transferred to Leno after her elimination, in the final round Breed surpassed Leno by about 2,000 votes. Though it’s outside the scope of this research to tell if this cross-endorsement was effective4, there is some evidence in favor of this theory. Leno received almost 70% of the votes previously counted for Kim compared to Breed’s 20%, bringing Breed’s final margin of victory down to only 1 percentage point. In previous rounds of the election, no single candidate ever received more than 35% of the transferred votes from an eliminated candidate5, so this is at least an unusual observation. Increases chances of minority candidates, in the multi-winner STV method All these pros boost turnout, allegedly (that series of articles talks about this) 1.4.2 Cons Doesn’t really ensure a majority, just a majority of final voters 1.5 Research into SF? More accurately, RCV is the single-winner implementation of the STV algorithm.↩ These types of errors are not uniform, and some jurisdictions are more forgiving than others about rules for counting these errors. While it may be apparent that a voter who listed the same candidate 3 times (A-A-A) prefers that candidate, a candidate ranking of A-B-A is harder to extract a clear preference from. Skipped votes are where we see the most variance in jurisdiction counting rules: if a voter marks the ballot A-__-B, skipping the second slot, some jurisdictions will ignore the skip and treat B as the voter’s second choice, while others will stop counting after A is eliminated (ignoring their vote for B), and others yet will throw out the ballot entirely.↩ Mostly in the American West: there are 9 cities west of the Mississippi River currently using RCV and only 4 east of it↩ Other confounding factors counld exist: maybe Kim and Leno had similar enough positions that this scenario would have happened without the endorsement, maybe this number is only significant because in the final rounds there were only 2 candidates for second choice votes to flow to, etc.↩ Except for round 2, where all 3 votes for the same write-in candidate transferred to Breed.↩ "],
["2-methods.html", "Chapter 2 Methods and Structure", " Chapter 2 Methods and Structure Inevitably, the data format that would be ideal to conduct this research doesn’t exist publicly (as it shouldn’t - voter anonymity and such). The ideal model might be a logistic or other classification model that predicts whether a given voter has a ballot error or fills out the ballot incompletely, given their demographic qualities. 2.0.1 Data Structure and Source The data used comes from two main sources. From the San Francisco Elections Office , we have a cast ballot record of the election in question . This is presented by the city as two text files: - The ballot image, a 45-character fixed-width file with fields corresponding to election, candidate, unique voter number (anonymized and disconnected from any voter registration ID), ranking, precinct, and other information. Each of these is encoded numerically, so each line of the file appears as a 45-digit number. - The lookup table, an 83-character fixed-width file that defines the encodings used to create the numerical values in the ballot image. In the ballot file, each voter is spread across three rows of data (one for each ranking). We use the clean_ballot() function from our rcv R package to read in the data for easier manipulation. From this data we have the full ranked preference set of candidates (up to 3) from each voter. Since the voter-level data is fully anonymized, we have no demographic information at the individual level. For any given voter, since the most identifying piece of information we have about them is their precinct, it is impossible to know any one voter’s gender or ethnicity. To gain insight into these demographic trends, we instead aggregate up to the precinct level. At the precinct level, we can now only study the rates of these ballot phenomena. For example, in Precinct 1703, we may see 14% of voters undervote. Rather than building a classification model (error / no error), we can now instead build regression models with a numerical dependent variable - the rate of ballot error. Moving up this level of abstraction does remove some granularity from the model (inference and prediction at the precinct level is less specific than at the individual level), but this is the least we can do and still be able to access demographic information. Now that we have precinct-level rates, we need to obtain precinct-level demographic information in order to build a model. Our source of demographic data is the 2010 U.S. Census (citation). While this data is slightly out of date (about 8 years), there is more certainty about the accuracy of the measurements collected. While a more temporally accurate data set like the yearly American Community Survey (ACS) could have been used, the error margins of this data set proved too large / complicated to be useful for this study. One consideration with this is that the voting population is not always representative of the general population. It might be more informative to obtain demographics about the voting population specifically, rather than the entire population of each precinct. However, the only information available about voters is their age (from the county voter registration file), and the discontinuity introduced by using two different data sets for demographic information is more of an “error” to me than using a less accurate (but universal) census data set. We now encounter a problem. Since census regions (block groups, tracts) are set by the federal government, and election precincts are set by San Francisco County6, the regions don’t line up nicely7. Given this mismatch, how do we obtain demographic estimates for our precincts? Stated more generally: if we have a division of a geographic region and some non-constant properties8 on the divisions, how do we estimate measures of these properties for other possible divisions? There are a few possible ways of accomplishing this. The way we use assumes a uniform spatial distribution of all non-constant properties: any sub-region has proportion of the full region’s property equal to the proportion of the area of the full region that the sub-region occupies. For example, if we split a region with 100 people into two sub-regions of equal area, we assume that there are 50 people in each sub-region. To approach this method, we first spatially intersect the two division sets of the city: census tracts and election precincts. This creates a new division, where every new sub-region is a unique combination of tract and precinct We can directly group these sub-regions together in one combination into the full set of precincts, and group them in another combination into the full set of census tracts. Using the uniform spatial assumption, we obtain demographic estimates for each of these sub-regions, then add them together in the precinct grouping to obtain demographic estimates for our precincts. This assumption of uniformity, like any assumption, may be unfounded. There are methods, some involving satellite imagery, to get more accurate information about population distribution. Quite honestly, these were just too complicated for the scope of this research. It is, however, more likely in an urban environment like San Francisco9 that this unifrmity assumption will not drastically change our estimates. The city and county government are unified in this case, because the county comprises entirely of the city of San Francisco.↩ There’s no inherent reason that they should, it’s just unfortunate for this study.↩ A constant property is something that is identical across all of its points: if a precinct is inside State House District 4, any point or region inside of it is inside State House District 4. A non-constant property is not identical across its interior: if there are 100 people in a precinct, there are not 100 people inside any arbitrary sub-region of the district.↩ as compared to the entire state of California, which has urban pockets within suburban regions within a rural overall condition↩ "],
["3-ref-labels.html", "Chapter 3 Tables, Graphics, References, and Labels 3.1 Tables 3.2 Figures 3.3 Footnotes and Endnotes 3.4 Bibliographies 3.5 Anything else?", " Chapter 3 Tables, Graphics, References, and Labels 3.1 Tables In addition to the tables that can be automatically generated from a data frame in R that you saw in [R Markdown Basics] using the kable function, you can also create tables using pandoc. (More information is available at http://pandoc.org/README.html#tables.) This might be useful if you don’t have values specifically stored in R, but you’d like to display them in table form. Below is an example. Pay careful attention to the alignment in the table and hyphens to create the rows and columns. Table 3.1: Correlation of Inheritance Factors for Parents and Child Factors Correlation between Parents &amp; Child Inherited Education -0.49 Yes Socio-Economic Status 0.28 Slight Income 0.08 No Family Size 0.18 Slight Occupational Prestige 0.21 Slight We can also create a link to the table by doing the following: Table 3.1. If you go back to [Loading and exploring data] and look at the kable table, we can create a reference to this max delays table too: Table ??. The addition of the (\\#tab:inher) option to the end of the table caption allows us to then make a reference to Table \\@ref(tab:label). Note that this reference could appear anywhere throughout the document after the table has appeared. 3.2 Figures If your thesis has a lot of figures, R Markdown might behave better for you than that other word processor. One perk is that it will automatically number the figures accordingly in each chapter. You’ll also be able to create a label for each figure, add a caption, and then reference the figure in a way similar to what we saw with tables earlier. If you label your figures, you can move the figures around and R Markdown will automatically adjust the numbering for you. No need for you to remember! So that you don’t have to get too far into LaTeX to do this, a couple R functions have been created for you to assist. You’ll see their use below. In the R chunk below, we will load in a picture stored as reed.jpg in our main directory. We then give it the caption of “Reed logo”, the label of “reedlogo”, and specify that this is a figure. Make note of the different R chunk options that are given in the R Markdown file (not shown in the knitted document). include_graphics(path = &quot;figure/reed.jpg&quot;) Figure 3.1: Reed logo Here is a reference to the Reed logo: Figure 3.1. Note the use of the fig: code here. By naming the R chunk that contains the figure, we can then reference that figure later as done in the first sentence here. We can also specify the caption for the figure via the R chunk option fig.cap. Below we will investigate how to save the output of an R plot and label it in a way similar to that done above. Recall the flights dataset from Chapter ??. (Note that we’ve shown a different way to reference a section or chapter here.) We will next explore a bar graph with the mean flight departure delays by airline from Portland for 2014. Note also the use of the scale parameter which is discussed on the next page. flights %&gt;% group_by(carrier) %&gt;% summarize(mean_dep_delay = mean(dep_delay)) %&gt;% ggplot(aes(x = carrier, y = mean_dep_delay)) + geom_bar(position = &quot;identity&quot;, stat = &quot;identity&quot;, fill = &quot;red&quot;) Figure 3.2: Mean Delays by Airline Here is a reference to this image: Figure 3.2. A table linking these carrier codes to airline names is available at https://github.com/ismayc/pnwflights14/blob/master/data/airlines.csv. Next, we will explore the use of the out.extra chunk option, which can be used to shrink or expand an image loaded from a file by specifying &quot;scale= &quot;. Here we use the mathematical graph stored in the “subdivision.pdf” file. Figure 3.3: Subdiv. graph Here is a reference to this image: Figure 3.3. Note that echo=FALSE is specified so that the R code is hidden in the document. More Figure Stuff Lastly, we will explore how to rotate and enlarge figures using the out.extra chunk option. (Currently this only works in the PDF version of the book.) Figure 3.4: A Larger Figure, Flipped Upside Down As another example, here is a reference: Figure 3.4. 3.3 Footnotes and Endnotes You might want to footnote something.10 The footnote will be in a smaller font and placed appropriately. Endnotes work in much the same way. More information can be found about both on the CUS site or feel free to reach out to data@reed.edu. 3.4 Bibliographies Of course you will need to cite things, and you will probably accumulate an armful of sources. There are a variety of tools available for creating a bibliography database (stored with the .bib extension). In addition to BibTeX suggested below, you may want to consider using the free and easy-to-use tool called Zotero. The Reed librarians have created Zotero documentation at http://libguides.reed.edu/citation/zotero. In addition, a tutorial is available from Middlebury College at http://sites.middlebury.edu/zoteromiddlebury/. R Markdown uses pandoc (http://pandoc.org/) to build its bibliographies. One nice caveat of this is that you won’t have to do a second compile to load in references as standard LaTeX requires. To cite references in your thesis (after creating your bibliography database), place the reference name inside square brackets and precede it by the “at” symbol. For example, here’s a reference to a book about worrying: (Molina &amp; Borkovec, 1994). This Molina1994 entry appears in a file called thesis.bib in the bib folder. This bibliography database file was created by a program called BibTeX. You can call this file something else if you like (look at the YAML header in the main .Rmd file) and, by default, is to placed in the bib folder. For more information about BibTeX and bibliographies, see our CUS site (http://web.reed.edu/cis/help/latex/index.html)11. There are three pages on this topic: bibtex (which talks about using BibTeX, at http://web.reed.edu/cis/help/latex/bibtex.html), bibtexstyles (about how to find and use the bibliography style that best suits your needs, at http://web.reed.edu/cis/help/latex/bibtexstyles.html) and bibman (which covers how to make and maintain a bibliography by hand, without BibTeX, at http://web.reed.edu/cis/help/latex/bibman.html). The last page will not be useful unless you have only a few sources. If you look at the YAML header at the top of the main .Rmd file you can see that we can specify the style of the bibliography by referencing the appropriate csl file. You can download a variety of different style files at https://www.zotero.org/styles. Make sure to download the file into the csl folder. Tips for Bibliographies Like with thesis formatting, the sooner you start compiling your bibliography for something as large as thesis, the better. Typing in source after source is mind-numbing enough; do you really want to do it for hours on end in late April? Think of it as procrastination. The cite key (a citation’s label) needs to be unique from the other entries. When you have more than one author or editor, you need to separate each author’s name by the word “and” e.g. Author = {Noble, Sam and Youngberg, Jessica},. Bibliographies made using BibTeX (whether manually or using a manager) accept LaTeX markup, so you can italicize and add symbols as necessary. To force capitalization in an article title or where all lowercase is generally used, bracket the capital letter in curly braces. You can add a Reed Thesis citation12 option. The best way to do this is to use the phdthesis type of citation, and use the optional “type” field to enter “Reed thesis” or “Undergraduate thesis.” 3.5 Anything else? If you’d like to see examples of other things in this template, please contact the Data @ Reed team (email data@reed.edu) with your suggestions. We love to see people using R Markdown for their theses, and are happy to help. footnote text↩ Reed College (2007)↩ Noble (2002)↩ "],
["conclusion.html", "Conclusion", " Conclusion If we don’t want Conclusion to have a chapter number next to it, we can add the {-} attribute. More info And here’s some other random info: the first paragraph after a chapter title or section head shouldn’t be indented, because indents are to tell the reader that you’re starting a new paragraph. Since that’s obvious after a chapter or section title, proper typesetting doesn’t add an indent there. If you feel it necessary to include an appendix, it goes here. --> "],
["A-the-first-appendix.html", "A The First Appendix", " A The First Appendix This first appendix includes all of the R chunks of code that were hidden throughout the document (using the include = FALSE chunk tag) to help with readibility and/or setup. In the main Rmd file # This chunk ensures that the thesisdown package is # installed and loaded. This thesisdown package includes # the template files for the thesis. if(!require(devtools)) install.packages(&quot;devtools&quot;, repos = &quot;http://cran.rstudio.com&quot;) if(!require(thesisdown)) devtools::install_github(&quot;ismayc/thesisdown&quot;) library(thesisdown) In Chapter 3: # This chunk ensures that the thesisdown package is # installed and loaded. This thesisdown package includes # the template files for the thesis and also two functions # used for labeling and referencing if(!require(devtools)) install.packages(&quot;devtools&quot;, repos = &quot;http://cran.rstudio.com&quot;) if(!require(dplyr)) install.packages(&quot;dplyr&quot;, repos = &quot;http://cran.rstudio.com&quot;) if(!require(ggplot2)) install.packages(&quot;ggplot2&quot;, repos = &quot;http://cran.rstudio.com&quot;) if(!require(ggplot2)) install.packages(&quot;bookdown&quot;, repos = &quot;http://cran.rstudio.com&quot;) if(!require(thesisdown)){ library(devtools) devtools::install_github(&quot;ismayc/thesisdown&quot;) } library(thesisdown) flights &lt;- read.csv(&quot;data/flights.csv&quot;) "],
["B-the-second-appendix-for-fun.html", "B The Second Appendix, for Fun", " B The Second Appendix, for Fun "],
["references.html", "References", " References "]
]
